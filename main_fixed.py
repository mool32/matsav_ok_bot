# main_fixed.py - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

import asyncio
import logging
import os
from telegram.ext import Application, CommandHandler, MessageHandler, filters

from config import BOT_TOKEN, LOG_FILE
from database import init_data_files
from scheduler import NotificationScheduler

def setup_logging():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É logs –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("logs", exist_ok=True)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ª–æ–≥–æ–≤
    log_format = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format=log_format,
        handlers=[
            logging.FileHandler(LOG_FILE, encoding='utf-8'),
            logging.StreamHandler()
        ]
    )
    
    # –£–º–µ–Ω—å—à–∞–µ–º –ª–æ–≥–∏ –æ—Ç httpx (—Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤)
    logging.getLogger("httpx").setLevel(logging.WARNING)
    
    return logging.getLogger(__name__)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger = setup_logging()
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –ú–∞—Ü–∞–≤ –¢–æ–≤...")
    logger.info(f"üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: {LOG_FILE}")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
        logger.info("üìÇ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö...")
        init_data_files()
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        logger.info("üîß –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞...")
        application = Application.builder().token(BOT_TOKEN).build()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞—Å—Å—ã–ª–∫–∏
        logger.info("üìÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞—Å—Å—ã–ª–∫–∏...")
        scheduler = NotificationScheduler(application)
        logger.info("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ bot_data –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        application.bot_data['scheduler'] = scheduler
        logger.info("üíæ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ bot_data")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ü–û–°–õ–ï –∏–º–ø–æ—Ä—Ç–∞
        logger.info("üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        from bot_handlers_fixed import (
            start_command, text_message_handler, admin_stats_command,
            admin_test_notification, admin_reschedule, set_global_scheduler,
            admin_moderate_command, admin_moderation_stats, admin_approve_all,
            admin_security_command
        )
        
        set_global_scheduler(scheduler)
        logger.info("‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ main.py")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        logger.info("‚öôÔ∏è –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥...")
        
        # –ö–æ–º–∞–Ω–¥–∞ /start
        application.add_handler(CommandHandler("start", start_command))
        
        # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        application.add_handler(CommandHandler("admin", admin_stats_command))
        application.add_handler(CommandHandler("test_notification", admin_test_notification))
        application.add_handler(CommandHandler("reschedule", admin_reschedule))
        
        # –ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        application.add_handler(CommandHandler("moderate", admin_moderate_command))
        application.add_handler(CommandHandler("stats_moderation", admin_moderation_stats))
        application.add_handler(CommandHandler("approve_all", admin_approve_all))
        
        # –ö–æ–º–∞–Ω–¥—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        application.add_handler(CommandHandler("security", admin_security_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_message_handler))
        
        logger.info("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞—Å—Å—ã–ª–∫–∏
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞—Å—Å—ã–ª–∫–∏...")
        scheduler.start()
        
        logger.info("üîÑ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")
        
        print("=" * 50)
        print("ü§ñ –ú–ê–¶–ê–í –¢–û–í –ë–û–¢ –ó–ê–ü–£–©–ï–ù")
        print("=" * 50)
        print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üìä –õ–æ–≥–∏: {LOG_FILE}")
        print("üîî –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞")
        print("üëë –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("   /admin - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        print("   /test_notification - —Ç–µ—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏")
        print("   /reschedule - –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å")
        print("üìù –ú–æ–¥–µ—Ä–∞—Ü–∏—è:")
        print("   /moderate - —Ñ—Ä–∞–∑—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏")
        print("   /stats_moderation - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏")
        print("   /approve_all - –æ–¥–æ–±—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ")
        print("üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:")
        print("   /security - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")
        print("=" * 50)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling(drop_pending_updates=True)
        
    except KeyboardInterrupt:
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        if 'scheduler' in locals():
            scheduler.stop()
        
        logger.info("üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")

if __name__ == "__main__":
    main()